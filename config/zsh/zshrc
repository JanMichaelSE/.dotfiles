# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# --- Zapper configuration ---
# Created by Zap installer
[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"

# Load and initialise completion system (Loaded first because of fzf-tab)
autoload -Uz compinit
compinit

# Load Plugins
plug "zap-zsh/vim"
plug "joshskidmore/zsh-fzf-history-search"
plug "aloxaf/fzf-tab"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
plug "zap-zsh/zap-prompt"
plug "zsh-users/zsh-syntax-highlighting"
plug "zsh-users/zsh-history-substring-search"
plug "romkatv/powerlevel10k"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# --- Aliases ---
alias tree='tree -I ".git|node_modules"'
alias c='clear'
alias cat="bat"
alias ll="exa -lFh -g --icons"
alias lla="exa -laFh -g --icons"
alias exa='exa -laFh -g --icons'
function mkcd {
  mkdir -p "$@" && cd "$_"
}

# --- Exports ---
export PATH="$PATH:$HOME/.cargo/bin"
export PATH="$PATH:/usr/local/go/bin"
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export EDITOR=nvim

# Used for "n" to be used in the path (Node Package Manager)
export N_PREFIX="$HOME/.n"
if [[ ":$PATH:" != *":$N_PREFIX/bin:"* ]]; then
    export PATH="$N_PREFIX/bin:$PATH"  # Added by n-install (see http://git.io/n-install-repo).
fi

# Appended Backdrop to PATH, done by install script.
export PATH=$PATH:$HOME/.backdrop/bin

# Setup fzf
# ---------
if [[ ! "$PATH" == */home/mike/.fzf/bin* ]]; then
  PATH="${PATH:+${PATH}:}/home/mike/.fzf/bin"
fi

# Open IntelliJ Easily
function ide {
    nohup idea $1 > /dev/null 2>&1 &
}

# --- Sets for Command History Management ---
setopt APPEND_HISTORY            # Append commands to the history file, rather than overwriting it
setopt INC_APPEND_HISTORY        # Add commands to the history file as they are typed
setopt SHARE_HISTORY             # Share history between all sessions

HISTFILE=~/.zsh_history
HISTSIZE=100000                  # Number of commands to keep in memory
SAVEHIST=200000                  # Number of commands to save in the history file

setopt HIST_IGNORE_ALL_DUPS      # Removes all duplicate history entries
setopt HIST_FIND_NO_DUPS         # Avoids duplicate matches during history search

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# Yazi Change to Directory on q 
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

function ide {
    nohup "$HOME/Documents/Applications/ideaIU-2024.3.5/idea-IU-243.26053.27/bin/idea" "$1" > /dev/null 2>&1 &
}

gsettings set org.gnome.mutter dynamic-workspaces false
gsettings set org.gnome.desktop.wm.preferences num-workspaces 9
for i in {1..9} 
do
  gsettings set "org.gnome.shell.keybindings" "switch-to-application-$i" "[]"
  gsettings set "org.gnome.desktop.wm.keybindings" "switch-to-workspace-$i" "['<Control>${i}']"
  gsettings set "org.gnome.desktop.wm.keybindings" "move-to-workspace-$i" "['<Control><Shift>${i}']"
done
